unstable class CharacterProfileViewModel {
  unstable val speciesRepository: SpeciesRepository
  unstable val planetRepository: PlanetRepository
  unstable val filmRepository: FilmRepository
  stable val id: Long
  unstable val characterResponse: StateFlow<Response<Character>>
  unstable val characterPersonalSectionState: StateFlow<CharacterProfileSectionState<CharacterPersonalSection>>
  unstable val speciesAbsentCharacterDataSectionState: Flow<CharacterProfileSectionState<SpeciesSection>>
  unstable val speciesPresentCharacterDataSectionState: Flow<CharacterProfileSectionState<SpeciesSection>>
  unstable val speciesSectionState: StateFlow<CharacterProfileSectionState<SpeciesSection>>
  unstable val homeWorldAbsentCharacterDataSectionState: Flow<CharacterProfileSectionState<HomeWorldSection>>
  unstable val homeWorldPresentCharacterDataSectionState: Flow<CharacterProfileSectionState<HomeWorldSection>>
  unstable val homeWorldSectionState: StateFlow<CharacterProfileSectionState<HomeWorldSection>>
  unstable val filmsAbsentCharacterDataSectionState: Flow<CharacterProfileSectionState<FilmsSection>>
  unstable val filmsPresentCharacterDataSectionState: Flow<CharacterProfileSectionState<FilmsSection>>
  unstable val filmsSectionState: StateFlow<CharacterProfileSectionState<FilmsSection>>
  <runtime stability> = Unstable
}
runtime class Success {
  runtime val section: T
  stable val warning: StarWarsWarning?
  <runtime stability> = Parameter(T)
}
stable class NothingToDisplay {
  stable val warning: StarWarsWarning?
  <runtime stability> = Stable
}
stable class Loading {
  <runtime stability> = Stable
}
unstable class CharacterPersonalInfo {
  stable val name: String
  unstable val birthYear: BirthYear
  unstable val height: Height
  <runtime stability> = Unstable
}
unstable class CharacterPersonalSection {
  unstable val info: CharacterPersonalInfo
  <runtime stability> = Unstable
}
stable class FilmInfo {
  stable val id: Long
  stable val title: String
  stable val openingCrawl: String
  <runtime stability> = Stable
}
stable class FilmsSection {
  stable val infoListing: ImmutableList<FilmInfo>
  <runtime stability> = 
}
unstable class HomeWorldInfo {
  stable val name: String
  unstable val population: Population
  <runtime stability> = Unstable
}
unstable class HomeWorldSection {
  unstable val info: HomeWorldInfo
  <runtime stability> = Unstable
}
unstable class SpeciesInfo {
  stable val id: Long
  stable val name: String
  unstable val language: Language
  <runtime stability> = Unstable
}
unstable class SpeciesSection {
  unstable val infoListing: ImmutableList<SpeciesInfo>
  <runtime stability> = Unstable
}
